<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ABAP技术 | lomozm’s Journal]]></title>
  <link href="http://lomozm.github.io/blog/categories/abapji-zhu/atom.xml" rel="self"/>
  <link href="http://lomozm.github.io/"/>
  <updated>2014-02-27T15:13:09+08:00</updated>
  <id>http://lomozm.github.io/</id>
  <author>
    <name><![CDATA[lomozm]]></name>
    <email><![CDATA[18064095@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用ABAP MEMORY与SAP MEMORY讨论]]></title>
    <link href="http://lomozm.github.io/blog/20140227/shi-yong-abap-memoryyu-sap-memory/"/>
    <updated>2014-02-27T14:07:08+08:00</updated>
    <id>http://lomozm.github.io/blog/20140227/shi-yong-abap-memoryyu-sap-memory</id>
    <content type="html"><![CDATA[
<h3 id="br">术语<br /></h3>
<p>#####SAP Memory/ABAP Memory：
为实现数据传递，SAP系统在服务器分配的内存空间，其分配的区域不同 <br />
#####User Session: 
用户登录系统时产生，用户登陆一次产生一个<br />
#####External Session：
也称main session，用户开启的一个窗口对应一个external session；其中一个logon user session中可以最大6个external session<br />
#####Internal Session：
程序运行中，系统为程序分配的session，一个程序可以分配多个internal session，也可能只有一个session，一个external session中最大可以使用20个Internal session<br />
<!-- more -->
User Session、External Session与Internal Session关系图：<br />
<img src="/images/images/ABAPMemoryAndSAPMemory/image002.gif" alt="i001" /><br />
<br /></p>

<h3 id="section">技术背景</h3>
<p>####总览
ABAP开发过程中，常需要在session之进行数据传递和共享，SAP提供了两种技术来实现它：SAP Memory和ABAP Memory<br />
一个external session对应着一个ABAP session，所以，一个window里的internal session共用着同一个ABAP session；所以，在一个user logon session中不同的window(external session)共同使用一个SAP memory<br />
SAP Memory、ABAP Memory、Main Session与Internal Session关系图：<br />
<img src="/images/images/ABAPMemoryAndSAPMemory/image004.gif" alt="i002" /><br /></p>

<h4 id="section-1">区别</h4>
<p>#####1、读取和使用方法不同
SAP内存使用<code>SET/GET parameters</code>方法：<br />
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!--StartFragment -->SET PARAMETER ID ‘MAT’ FIELD P_MATNR.
</span><span class='line'>GET PARAMETER ID ‘MAT’ FIELD P_MATNR.</span></code></pre></td></tr></table></div></figure></notextile></div>
ABAP内存使用<code>EXPORT/IMPORT</code>方法：<br />
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!--StartFragment -->EXPORT P_MATNR = P_MATNR TO MEMORY ID ‘ZTESTMAT’.
</span><span class='line'>IMPORT P_MATNR = P_MATNR FROM MEMORY ID ‘ZTESTMAT’</span></code></pre></td></tr></table></div></figure></notextile></div>
#####2、共享范围不同
SAP内存可以被所有的主session访问，内存数据可以在同一个session中不同程序之间，或者不同session之间共享数据；<br />
ABAP内存只能在同个session的不同程序之间共享数据；<br />
#####3、作用范围不同
SAP内存在整个终端session时间内都有效；<br />
ABAP内存只能在一个session时间内有效；<br />
#####4、使用一般原则
SAP内存用于屏幕默认值输入；<br />
ABAP内存用于模块之间传递数据<br />
###难点分析
####LINK PROGRAM介绍
使用ABAP/SAP Memory，是因为它们可以在SAP中充当着“数据存储器”的作用，就比如DB、File等，同时程序中，因为我们大量地使用着Link program，所以为了数据的共享或者传递。<br />
首先简要地总结一下Link program。从大类上来分，主要可以通过以下的图示表述:<br />
<img src="/images/images/ABAPMemoryAndSAPMemory/image006.gif" alt="i003" /><br />
说明：<br />
“被调用程序插入型”是指：调用程序(calling program)并不结束，当遇到Link 语句时，会去执行被调用程序(called program)，当被调用程序结束后，调用程序继续执行;<br />
“调用程序中止型”是指：调用程序(calling program)当遇到Link 语句时会中止，然后去执行被调用程序(called program)<br />
####LINK PROGRAM与MEMORY的关系<br />
#####1、对于FM:
当一个FM被调用时，它对应的Function Group被load进当前的这个 internal session，当其处理完了，calling program继续被处理;(该Function Group下的global data可以继续被使用).<br />
#####2、对于CALL TRANSACTION或SUBMIT AND RETURN
当运行到这种情况时，系统会重新运行一个internal session,当called program结束后(也可以是使用leave program)，这个internal session会被delete掉，然后calling program继续运行.<br />
#####3、对于SUBMIT
当运行到这种情况时，calling program从当前的internal session中被移走，而called program被load进这个internal session.<br />
#####4、对于LEAVE TO TRANSACTION
当运行到这种情况时，当前External session中的所有internal session被清掉，而called transaction将会在该external session中新开一个internal session;<br />
另外，该种情况下，该external session所对应的ABAP memory将会被initialize,所以这种情况下，我们不能使用ABAP memory来传递数据，而应该使用SAP Memory;<br />
#####5、异步的LINK PROGRAM:
当遇到这种FM时，将会重新打开一个external session,它并行地、独立于当前的external session.<br />
<br />
###思路或想法
在同一个external session的Link program我们使用ABAP Memory进行传递数据<br />
而在不同的external session间的Link program我们使用SAP Memory进行数据传递。很多时候并不是像ABAP Memory那样直接在程序中完成了Set与Get方法；相反，一般是将其绑定给某一Data element(并激活着Set与Get方法)，从而任何其他程序使用了该Data element的地方都将会有“default”值，也就是说在一个地方的data element的改变会影响其他地方，从而也就达到了数据传递的效果；我们自己在开发Dynpro的程序时，有时候根据实际的需求，也会勾选某些 element的SPA/GPA属性(在SE51 Screen Painter中); 其实，这也是SAP标准所采用的技术<br />
对于FM而言，因为它依附于Function Group，所以，一般如果我们使用FM需要数据传递或者共享的话(除了FM自己的import/export/table外)，我们是使用Function Group的全局变量<br />
<br />
###解决方案与系统实现
####ABAP MEMORY实例
#####主要任务
程序1： ZTEST_ABAP_MEM_PROG1——将数据写入ABAP内存
1、清空该memory ID
2、向memory ID传递一个<code>work area</code>
3、向memory ID传递一个<code>Internal table</code>
4、向memory ID传递一个<code>Parameter</code></p>

<p>程序2： ZTEST_ABAP_MEM_PROG2——从ABAP内存取出数据
1、从memory ID取得一个<code>work area</code>
2、从memory ID取得一个<code>Internal table</code>
3、从memory ID取得一个<code>Parameter并同时赋给选择屏幕上的<code>parameter</code></code></p>

<h5 id="section-2">程序代码</h5>
<p>ZTEST_ABAP_MEM_PROG1
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>REPORT  ZTEST_ABAP_MEM_PROG1  No standard page heading  .&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>*—Data &amp; Types
</span><span class='line'>data:
</span><span class='line'>  gs_scutom   type   scustom,
</span><span class='line'>  gt_scustom  type  table of scustom,
</span><span class='line'>  gv_para     type   char10.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>start-of-selection.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>*—Free Memory
</span><span class='line'>  Free memory ID ‘TEST1′.
</span><span class='line'>*—Retrieve data
</span><span class='line'>*1. Get the structure
</span><span class='line'>  select single * from scustom
</span><span class='line'>    into gs_scutom
</span><span class='line'>    where ID = ‘00000001′.
</span><span class='line'>*2. Get the table
</span><span class='line'>  select  * from scustom
</span><span class='line'>    into table gt_scustom
</span><span class='line'>    up to 10 rows
</span><span class='line'>    where COUNTRY = ‘DE’.
</span><span class='line'>*3. Set the parameter
</span><span class='line'>   gv_para = ‘EDISON_TC’.
</span><span class='line'>*4. Export to ABAP Memory
</span><span class='line'>  Export  gs_scutom   gt_scustom   gv_para
</span><span class='line'>  To Memory ID ‘TEST1′.
</span><span class='line'>*5. Submit Program 2
</span><span class='line'>  Submit ZTEST_ABAP_MEM_PROG2.</span></code></pre></td></tr></table></div></figure></notextile></div>
  <br />
ZTEST_ABAP_MEM_PROG2
 <div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>REPORT  ZTEST_ABAP_MEM_PROG2  No standard page heading  .&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>*—Data &amp; Types
</span><span class='line'> data:
</span><span class='line'>   gs_scutom   type   scustom,
</span><span class='line'>   gt_scustom  type  table of scustom,
</span><span class='line'>   gv_para     type   char10.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>data:
</span><span class='line'>   ls_scutom  type scustom.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>parameter: p_para  type char10.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>start-of-selection.
</span><span class='line'> *1. Get the data from ABAP Memory
</span><span class='line'>   Import
</span><span class='line'>     gs_scutom
</span><span class='line'>     gt_scustom
</span><span class='line'>     gv_para to p_para
</span><span class='line'>   From Memory ID ‘TEST1′.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>*2. Write the data
</span><span class='line'>   write:/ ‘1. The structure:’,
</span><span class='line'>           10, gs_scutom-id,
</span><span class='line'>           20, gs_scutom-NAME,
</span><span class='line'>           30, gs_scutom-COUNTRY.
</span><span class='line'>   uline /(100).&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>write:/ ‘2. The table:’.
</span><span class='line'>   Loop at gt_scustom into ls_scutom.
</span><span class='line'>     write:/10 ls_scutom-id,
</span><span class='line'>           20, ls_scutom-NAME,
</span><span class='line'>           30, ls_scutom-COUNTRY.
</span><span class='line'>   endloop.
</span><span class='line'>   uline /(100).&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>write:/ ‘3. The parameter:’,p_para.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div>
  <br />
####SAP MEMORY实例
不同于ABAP Memory，可以直接在程序中进行指定；对于SAP Memory，它其实是利用的是我们经常所说的SPA/GPA,也就是set parameter和get parameter；所以，这里首先得创建<code>parameter ID</code>;<br />
创建Parameter，我们一般是使用SE80 object Navigator来进行创建,它最长为20位；Parameter的数据是存于数据库表TPARA<br />
#####主要任务
程序1：ZTEST_SAP_MEMORY<em>1——存入数据至SAP Memory中<br /> 它是一个普通的Report程序，它只有一个parameter,但addition了一个parameter ID.然后F8执行会跳转到program 2<br />
程序2：ZTEST_SAP_MEMORY</em>1——把SAP Memory数据取出<br />
它是一个普通的Dynpro程序，它只有一个Screen,在这个Screen上面有一个<code>Input field</code>，同时该input field激活了SAP与GPA并指定了其<code>parameter ID</code>.当点击Application bar上的回到program1后会跳转到program 1<br />
  <br />
#####程序代码
 <div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>REPORT  ZTEST_SAP_MEMORY&lt;em>1 NO STANDARD PAGE HEADING.
</span><span class='line'> *—PARAMETER
</span><span class='line'>   PARAMETERS: p_spa type ZDELM&lt;/em>1 MEMORY ID ZPARA1.
</span><span class='line'> start-of-selection.
</span><span class='line'> *—USING SAP MEMORY
</span><span class='line'> *1. Leave to Transaction –&gt; program 2
</span><span class='line'>   leave to TRANSACTION ‘ZSAP_MEM_2′.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>MODULE USER_COMMAND&lt;em>0100 INPUT.
</span><span class='line'>     CASE SY-UCOMM .
</span><span class='line'>       WHEN ‘BACK’ or ‘%EX’ or ‘RW’.
</span><span class='line'>         LEAVE to SCREEN 0.
</span><span class='line'>       when ‘PROG1′.
</span><span class='line'>         LEAVE to TRANSACTION ‘ZSAP_MEM&lt;/em>1′.
</span><span class='line'>       WHEN OTHERS.
</span><span class='line'>     ENDCASE.
</span><span class='line'>   ENDMODULE.                 “ USER_COMMAND_0100  INPUT&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EVAL_FORMULA 公式计算测试]]></title>
    <link href="http://lomozm.github.io/blog/20131230/eval-formula-gong-shi-ji-suan-ce-shi/"/>
    <updated>2013-12-30T16:36:25+08:00</updated>
    <id>http://lomozm.github.io/blog/20131230/eval-formula-gong-shi-ji-suan-ce-shi</id>
    <content type="html"><![CDATA[
<h3 id="section">应用场景</h3>
<p>当客户需要的报表逻辑较复杂，同一种类的数据进行数据运算，或者再累计计算，或者排除等；如果在程序中写死的话，业务的变更会导致程序的变更，使维持工作量加大<br />
SAP提供了一个函数，使报表运算过程可配置，提高了开发的灵活性<br />
<!--more--></p>

<h3 id="section-1">表定义</h3>
<p><img src="/images/images/EVAL_FORMULA_test.files/image001.png" alt="m001" /></p>

<h3 id="section-2">值输入</h3>
<p><img src="/images/images/EVAL_FORMULA_test.files/image003.png" alt="m002" /></p>

<h3 id="section-3">输出结果</h3>
<p><img src="/images/images/EVAL_FORMULA_test.files/image005.png" alt="m003" /></p>

<h3 id="section-4">程序代码</h3>
<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;em>&amp;———————————————————————&lt;/em>
</span><span class='line'>&lt;em>&amp; Report  ZTEST03
</span><span class='line'>*&amp; 公式计算测试
</span><span class='line'>*&amp;———————————————————————&lt;/em>
</span><span class='line'>&lt;em>&amp;
</span><span class='line'>*&amp;
</span><span class='line'>*&amp;———————————————————————&lt;/em>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>REPORT  ZTEST03.
</span><span class='line'>TYPE-POOLS:  slis.
</span><span class='line'>TABLES: ZTEST03_TB.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>DATA: w_repid LIKE sy-repid,
</span><span class='line'>   w_title TYPE lvc_title,
</span><span class='line'>   tb_fieldcat TYPE slis_t_fieldcat_alv WITH HEADER LINE,
</span><span class='line'>   wa_fields TYPE LINE OF slis_t_fieldcat_alv,
</span><span class='line'>   tb_events TYPE slis_t_event WITH HEADER LINE,
</span><span class='line'>   wa_layout   TYPE lvc_s_layo,
</span><span class='line'>   wa_is_layout     TYPE slis_layout_alv.
</span><span class='line'>DATA: gs_layout   TYPE lvc_s_layo.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>DATA: IT_TAB TYPE TABLE OF ZTEST03_TB WITH HEADER LINE.
</span><span class='line'>DATA: IT_TAB2 TYPE TABLE OF ZTEST03_TB WITH HEADER LINE.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>START-OF-SELECTION.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>REFRESH: IT_TAB, IT_TAB2.
</span><span class='line'>  SELECT * INTO TABLE IT_TAB FROM ZTEST03_TB.
</span><span class='line'>  IT_TAB2[] = IT_TAB[].
</span><span class='line'>  LOOP AT IT_TAB WHERE CHAR02 IS NOT INITIAL.
</span><span class='line'>    PERFORM FRM_CALCULATE_VALUE USING IT_TAB-DATA1
</span><span class='line'>                                      IT_TAB-CHAR02.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>MODIFY IT_TAB.   ENDLOOP.
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>END-OF-SELECTION.
</span><span class='line'>  PERFORM append_alv USING ‘NUMBE’ ‘行号’.
</span><span class='line'>  PERFORM append_alv USING ‘CHAR01’ ‘标识组1’.
</span><span class='line'>  PERFORM append_alv USING ‘CHAR02’ ‘标识组2’.
</span><span class='line'>  PERFORM append_alv USING ‘DATA1’ ‘值’.
</span><span class='line'>  PERFORM append_alv USING ‘MEINS’ ‘单位’.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>perform display_alv tables it_tab.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>FORM append_alv USING value(fieldname) TYPE c
</span><span class='line'>                    value(fieldtxt) TYPE c.
</span><span class='line'>  tb_fieldcat-fieldname    = fieldname.
</span><span class='line'>  tb_fieldcat-reptext_ddic = fieldtxt.
</span><span class='line'>  APPEND tb_fieldcat.CLEAR  tb_fieldcat.
</span><span class='line'>ENDFORM.                    “append_alv&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>&lt;em>&amp;———————————————————————&lt;/em>
</span><span class='line'>&lt;em>&amp;      Form  FRM_CALCULATE_VALUE
</span><span class='line'>*&amp;———————————————————————&lt;/em>
</span><span class='line'>*       text
</span><span class='line'>&lt;em>———————————————————————-&lt;/em>
</span><span class='line'>*      –&gt;P_ZVALUE   text
</span><span class='line'>*      –&gt;P_ZJSGS    text
</span><span class='line'>&lt;em>———————————————————————-&lt;/em>
</span><span class='line'>FORM FRM_CALCULATE_VALUE USING P_ZVALUE
</span><span class='line'>                               P_ZJSGS.
</span><span class='line'>*  DATA: FORMEL TYPE FORMEL.
</span><span class='line'>  DATA: FORMEL(255) TYPE C.
</span><span class='line'>  DATA: G_REPID LIKE SY-REPID.
</span><span class='line'>  DATA: L_CC TYPE F.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>FORMEL = P_ZJSGS.
</span><span class='line'>  G_REPID = SY-REPID.
</span><span class='line'>* Work out formula
</span><span class='line'>  CALL FUNCTION ‘EVAL_FORMULA’
</span><span class='line'>    EXPORTING
</span><span class='line'>      FORMULA = FORMEL
</span><span class='line'>      PROGRAM = G_REPID
</span><span class='line'>      ROUTINE = ‘FRM_VAR_GET’
</span><span class='line'>*        UNIT_OF_MEASURE = ‘RMB’
</span><span class='line'>    IMPORTING
</span><span class='line'>      VALUE   =  L_CC
</span><span class='line'>    EXCEPTIONS
</span><span class='line'>      OTHERS  = 1.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>P_ZVALUE = L_CC.
</span><span class='line'>ENDFORM.                    “ FRM_CALCULATE_VALUE
</span><span class='line'>&lt;em>&amp;———————————————————————&lt;/em>
</span><span class='line'>&lt;em>&amp;      Form  FRM_VAR_GET
</span><span class='line'>*&amp;———————————————————————&lt;/em>
</span><span class='line'>*       text
</span><span class='line'>&lt;em>———————————————————————-&lt;/em>
</span><span class='line'>*      –&gt;VALUE(NAME)   text
</span><span class='line'>*      –&gt;VALUE(VALUE)  text
</span><span class='line'>*      –&gt;VALUE(SUBRC)  text
</span><span class='line'>&lt;em>———————————————————————-&lt;/em>
</span><span class='line'>FORM FRM_VAR_GET USING VALUE(NAME)
</span><span class='line'>         CHANGING VALUE(VALUE)
</span><span class='line'>                  VALUE(SUBRC).
</span><span class='line'>  SUBRC = 0.
</span><span class='line'>  VALUE = 0.
</span><span class='line'>  READ TABLE IT_TAB2 WITH KEY CHAR01 = NAME.
</span><span class='line'>  IF SY-SUBRC = 0.
</span><span class='line'>    VALUE = IT_TAB2-DATA1.
</span><span class='line'>  ELSE.
</span><span class='line'>    VALUE = 1.
</span><span class='line'>  ENDIF.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>ENDFORM.                    “FRM_VAR_GET
</span><span class='line'>&lt;em>&amp;———————————————————————&lt;/em>
</span><span class='line'>&lt;em>&amp;      Form  DISPLAY_ALV
</span><span class='line'>*&amp;———————————————————————&lt;/em>
</span><span class='line'>*       text
</span><span class='line'>&lt;em>———————————————————————-&lt;/em>
</span><span class='line'>*      –&gt;P_IT_DATA  text
</span><span class='line'>&lt;em>———————————————————————-&lt;/em>
</span><span class='line'>FORM DISPLAY_ALV  tables  P_IT_DATA.
</span><span class='line'>  w_repid = sy-repid.
</span><span class='line'>  wa_is_layout-colwidth_optimize = ‘X’.     “adjust line width automatic
</span><span class='line'>  wa_is_layout-min_linesize      =  100.    “
</span><span class='line'>  wa_is_layout-zebra      =  ‘X’.    “&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>CALL FUNCTION ‘REUSE_ALV_GRID_DISPLAY’
</span><span class='line'>    EXPORTING
</span><span class='line'>      i_callback_program       = w_repid
</span><span class='line'>      is_layout                = wa_is_layout
</span><span class='line'>      it_fieldcat              = tb_fieldcat[]
</span><span class='line'>*      i_save                   = ‘A’
</span><span class='line'>*      it_events                = tb_events[]
</span><span class='line'>*      i_callback_pf_status_set = ‘SET_PF_STATUS’
</span><span class='line'>*      I_CALLBACK_USER_COMMAND  = L_USER_COMMAND
</span><span class='line'>    TABLES
</span><span class='line'>      t_outtab                 = P_IT_DATA[]
</span><span class='line'>    EXCEPTIONS
</span><span class='line'>      program_error            = 1
</span><span class='line'>      OTHERS                   = 2.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>IF sy-subrc &lt;&gt; 0.
</span><span class='line'>    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
</span><span class='line'>           WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
</span><span class='line'>  ENDIF.&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>ENDFORM. &lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[针对SAP程序强出窗口的调试]]></title>
    <link href="http://lomozm.github.io/blog/20131225/zhen-dui-sapcheng-xu-qiang-chu-chuang-kou-de-diao-shi/"/>
    <updated>2013-12-25T14:21:15+08:00</updated>
    <id>http://lomozm.github.io/blog/20131225/zhen-dui-sapcheng-xu-qiang-chu-chuang-kou-de-diao-shi</id>
    <content type="html"><![CDATA[
<p>常会碰到对SAP程序进行调试，无非有以下几种
</p>
<p>1. 在程序中打断点或者加入breakpoint语名
</p>
<p>2. 输入<code>/H</code>命令
</p>
<!--more-->
<p>
如果是在系统程序中，想对强出窗口对进调试的话，只能使用第1种方法，找到相应的代码加断点，非常麻烦</p>

<p>感谢以前项目组一同事，提供了一断<a href="/appendix/popup debug.txt" title="File download">代码</a>，只需要把它写入到txt文件中，在弹出窗口时，把这个文件拖至弹出窗口上，相当于加入了<code>/h</code>命令<br /></p>
<p>代码入下：</p>
<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[FUNCTION]&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>Command=/H
</span><span class='line'>Title=Barry Test
</span><span class='line'>Type=SystemCommand</span></code></pre></td></tr></table></div></figure></notextile></div></p>

]]></content>
  </entry>
  
</feed>
